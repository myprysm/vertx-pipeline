<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2018 the original author or the original authors
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.myprysm</groupId>
    <artifactId>vertx-pipeline</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>vertx-pipeline-core</module>
        <!--<module>vertx-pipeline-twitter</module>-->
        <!--<module>java-exercise</module>-->
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <vertx.version>3.5.1</vertx.version>
        <logback.version>1.2.3</logback.version>
        <commons-lang.version>3.7</commons-lang.version>
        <classpath-scanner.version>2.18.1</classpath-scanner.version>
        <strman.version>0.4.0</strman.version>

        <assertj.version>3.9.0</assertj.version>
        <junit-jupiter.version>5.1.0</junit-jupiter.version>
        <junit-platform.version>1.1.0</junit-platform.version>

        <!-- plugin versions & properties -->
        <compiler-plugin.version>3.5.1</compiler-plugin.version>
        <docker-plugin.version>1.0.0</docker-plugin.version>
        <shade-plugin.version>2.4.3</shade-plugin.version>
        <clean-plugin.version>3.0.0</clean-plugin.version>
        <surefire-plugin.version>2.19.1</surefire-plugin.version>
        <jacoco-plugin.version>0.8.0</jacoco-plugin.version>
        <javadoc-plugin.version>3.0.0</javadoc-plugin.version>
        <site-plugin.version>3.7</site-plugin.version>
        <exec-plugin.version>1.5.0</exec-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.lukehutch</groupId>
                <artifactId>fast-classpath-scanner</artifactId>
                <version>${classpath-scanner.version}</version>
            </dependency>
            <dependency>
                <groupId>com.shekhargulati</groupId>
                <artifactId>strman</artifactId>
                <version>${strman.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-codegen</artifactId>
                <version>${vertx.version}</version>
                <scope>provided</scope>
                <optional>true</optional>
            </dependency>


            <dependency>
                <groupId>io.vertx</groupId>
                <artifactId>vertx-junit5</artifactId>
                <version>${vertx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-engine</artifactId>
                <version>${junit-platform.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>${junit-platform.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <useIncrementalCompilation>false</useIncrementalCompilation>

                        <annotationProcessors>
                            <annotationProcessor>io.vertx.codegen.CodeGenProcessor</annotationProcessor>
                        </annotationProcessors>
                        <generatedSourcesDirectory>${project.basedir}/src/main/generated</generatedSourcesDirectory>
                        <compilerArgs>
                            <arg>-AoutputDirectory=${project.basedir}/src/main</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${clean-plugin.version}</version>
                    <configuration>
                        <filesets>
                            <fileset>
                                <directory>${project.basedir}/src/main/generated</directory>
                            </fileset>
                        </filesets>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>docker</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!-- Configure the image name -->
                        <imageName>myprysm/${project.artifactId}:latest</imageName>
                        <baseImage>openjdk:8-jre-alpine</baseImage>
                        <env>
                            <JAR_NAME>${project.artifactId}-fat.jar</JAR_NAME>
                            <VERTICLE_HOME>/usr/verticles</VERTICLE_HOME>
                        </env>
                        <workdir>$VERTICLE_HOME</workdir>
                        <resources>
                            <resource>
                                <targetPath>/usr/verticles</targetPath>
                                <directory>${project.build.directory}</directory>
                                <includes>
                                    <include>${project.artifactId}-fat.jar</include>
                                </includes>
                            </resource>
                            <!-- don't forget to also add all the dependencies required by your application -->
                        </resources>

                        <entryPoint>["sh", "-c"]</entryPoint>
                        <cmd>["exec java -jar $JAR_NAME -cp ."]</cmd>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${shade-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <transformers>
                                    <transformer
                                            implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                        <manifestEntries>
                                            <Main-Class>fr.myprysm.pipeline.Launcher</Main-Class>
                                            <Main-Verticle>fr.myprysm.pipeline.DeploymentVerticle</Main-Verticle>
                                        </manifestEntries>
                                    </transformer>
                                    <transformer
                                            implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                        <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
                                    </transformer>
                                </transformers>
                                <artifactSet>
                                </artifactSet>
                                <outputFile>${project.build.directory}/${project.artifactId}-fat.jar
                                </outputFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire-plugin.version}</version>
                    <configuration>
                        <!-- Sets the vm arguments for JaCoCO instrumentation -->
                        <argLine>${surefireArgLine}</argLine>
                        <includes>
                            <include>**/Test*.java</include>
                            <include>**/*Test.java</include>
                            <include>**/*Tests.java</include>
                            <include>**/*TestCase.java</include>
                            <include>**/RandomName.java</include>
                        </includes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${junit-platform.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
                                <propertyName>surefireArgLine</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>


                <!-- Doc & report -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadoc-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>javadoc</id>
                            <goals>
                                <goal>javadoc</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <failOnError>false</failOnError>
                    </configuration>
                </plugin>
                <!-- Plugins for site phase -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${site-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>attach-site</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>site-and-stage</id>
                            <phase>site</phase>
                            <goals>
                                <goal>site</goal>
                                <goal>stage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-plugin.version}</version>
                    <configuration>
                        <mainClass>fr.myprysm.pipeline.Launcher</mainClass>
                        <arguments>
                            <argument>run</argument>
                            <argument>fr.myprysm.pipeline.DeploymentVerticle</argument>
                        </arguments>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <developers>
        <developer>
            <name>Damien Benon</name>
            <url>https://github.com/myprysm</url>
        </developer>
    </developers>
    <scm>
        <url>https://github.com/myprysm/vertx-pipeline</url>
    </scm>
</project>
